package model;
// Generated Oct 25, 2018 10:38:53 AM by Hibernate Tools 5.1.10.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Quiz generated by hbm2java
 */
@Entity
@Table(name = "quiz", catalog = "QUIZ2")
public class Quiz implements java.io.Serializable {

	private Integer idTest;
	private Formateur formateur;
	private Module module;
	private String nomTest;
	private boolean testPublie;
	private Boolean quizAleatoire;
	private Set<Passer> passers = new HashSet<Passer>(0);
	private List<Question> questions = new ArrayList<Question>(0);

	public Quiz() {
	}

	public Quiz(Formateur formateur, Module module, String nomTest, boolean testPublie) {
		this.formateur = formateur;
		this.module = module;
		this.nomTest = nomTest;
		this.testPublie = testPublie;
	}

	public Quiz(Formateur formateur, Module module, String nomTest, boolean testPublie, Boolean quizAleatoire,
			Set<Passer> passers, List<Question> questions) {
		this.formateur = formateur;
		this.module = module;
		this.nomTest = nomTest;
		this.testPublie = testPublie;
		this.quizAleatoire = quizAleatoire;
		this.passers = passers;
		this.questions = questions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idTest", unique = true, nullable = false)
	public Integer getIdTest() {
		return this.idTest;
	}

	public void setIdTest(Integer idTest) {
		this.idTest = idTest;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idFormateur", nullable = false)
	public Formateur getFormateur() {
		return this.formateur;
	}

	public void setFormateur(Formateur formateur) {
		this.formateur = formateur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idModule", nullable = false)
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@Column(name = "nomTest", nullable = false, length = 64)
	public String getNomTest() {
		return this.nomTest;
	}

	public void setNomTest(String nomTest) {
		this.nomTest = nomTest;
	}

	@Column(name = "testPublie", nullable = false)
	public boolean isTestPublie() {
		return this.testPublie;
	}

	public void setTestPublie(boolean testPublie) {
		this.testPublie = testPublie;
	}

	@Column(name = "quizAleatoire")
	public Boolean getQuizAleatoire() {
		return this.quizAleatoire;
	}

	public void setQuizAleatoire(Boolean quizAleatoire) {
		this.quizAleatoire = quizAleatoire;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quiz")
	public Set<Passer> getPassers() {
		return this.passers;
	}

	public void setPassers(Set<Passer> passers) {
		this.passers = passers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quiz")
	public List<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(List<Question> questions) {
		this.questions = questions;
	}
	
	

}
