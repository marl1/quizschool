package model;
// Generated Oct 25, 2018 10:38:53 AM by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Proposition generated by hbm2java
 */
@Entity
@Table(name = "proposition", catalog = "QUIZ2")
public class Proposition implements java.io.Serializable {

	private Integer idProposition;
	private Question question;
	private String texteProposition;
	private Boolean propositionJuste;
	private Set<Donner> donners = new HashSet<Donner>(0);

	public Proposition() {
	}

	public Proposition(Question question, String texteProposition) {
		this.question = question;
		this.texteProposition = texteProposition;
	}

	public Proposition(Question question, String texteProposition, Boolean propositionJuste, Set<Donner> donners) {
		this.question = question;
		this.texteProposition = texteProposition;
		this.propositionJuste = propositionJuste;
		this.donners = donners;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idProposition", unique = true, nullable = false)
	public Integer getIdProposition() {
		return this.idProposition;
	}

	public void setIdProposition(Integer idProposition) {
		this.idProposition = idProposition;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idQuestion", nullable = false)
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "texteProposition", nullable = false, length = 65535)
	public String getTexteProposition() {
		return this.texteProposition;
	}

	public void setTexteProposition(String texteProposition) {
		this.texteProposition = texteProposition;
	}

	@Column(name = "propositionJuste")
	public Boolean getPropositionJuste() {
		return this.propositionJuste;
	}

	public void setPropositionJuste(Boolean propositionJuste) {
		this.propositionJuste = propositionJuste;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "proposition")
	public Set<Donner> getDonners() {
		return this.donners;
	}

	public void setDonners(Set<Donner> donners) {
		this.donners = donners;
	}

	@Override
	public String toString() {
		return texteProposition;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idProposition == null) ? 0 : idProposition.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Proposition other = (Proposition) obj;
		if (idProposition == null) {
			if (other.idProposition != null)
				return false;
		} else if (!idProposition.equals(other.idProposition))
			return false;
		return true;
	}
	
	

}
